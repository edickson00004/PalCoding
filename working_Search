import tkinter as tk
from tkinter import messagebox

root = tk.Tk()
root.title("Drugs")
root.config(background='#804D5A')
root.geometry("700x700")

def open_new_window(category):
    root2 = tk.Tk()  # Create a new Tk instance for the second window
    root2.title("Insurance Coverage Cards")
    root2.geometry("700x700")




    label = tk.Label(root2, text=f"You clicked on {category}", font=('Times New Roman', 16))
    label.grid(row=0, column=0)




    root2.mainloop()  # Start the event loop for the second window

# Configure column and row weights to center the widgets
root.columnconfigure(0, weight=1)
root.rowconfigure(0, weight=1)
root.rowconfigure(1, weight=1)
root.rowconfigure(2, weight=1)
root.rowconfigure(3, weight=1)

search = tk.Entry(root)
label = tk.Label(root)
label2 = tk.Label(root)

output = tk.Text(root, height=5, width=15, font=('Times New Roman', 16))
output.grid(row=3, pady=(0,50), sticky='N')

button = tk.Button(root, command=lambda: new())
button.config(text='Search')
button.config(font={'Times New Roman', 30})
button.grid(row=2, pady=(0,30), sticky='N')

types = [['Pharma', 'InovaCare'], [['Advil', 'Xanax'], ['James', 'Tylenol']]]


def Sfunction(event):
    text = search.get()
    for drug_list in types[1]:
        if text.lower() in [d.lower() for d in drug_list]:
            category = types[0][types[1].index(drug_list)]
            output.delete("1.0", tk.END)  # Clear previous content
            output.insert('end', category, "link")
            output.yview(tk.END)
            output.tag_configure("link", foreground="blue", underline=True)
            output.tag_bind("link", "<Button-1>", lambda event: open_new_window(category))
            return
    output.delete("1.0", tk.END)  # Clear previous content
    output.insert('end', "Not Available\n")
    output.yview(tk.END)

def new():
    Sfunction(None)

label.config(text='Search your drug')
label.config(background='#804D5A', fg='#FFFFFF')
label.config(font=('Times New Roman', 20, 'bold'))
label.grid(row=0, pady=(75,10), sticky='S')

search.bind('<Return>', Sfunction)
search.grid(row=1, sticky='N')











root.mainloop()
